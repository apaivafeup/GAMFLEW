[
    {
        "id": 0,
        "name": "Challenge 1.1: Baby's First Statement Coverage Challenge",
        "description": "This challenge is a tutorial. It will teach you how to play the game!",
        "count": 1,
        "timer": 300,
        "hint": "You may cover the statement through the true or false branch - only one is needed!",
        "objective": "Statement coverage of line 6.",
        "board": "default",
        "code_file": 1,
        "passing_criteria": {
            "type": "statement",
            "preconditions": [
                "input.log[input.currentKey].length > 0"
            ],
            "tests": [
                "Math.abs(input.log[input.currentKey][input.log[input.currentKey].length - 1].from.x - input.log[input.currentKey][input.log[input.currentKey].length - 1].to.x) > 2"
            ]
        },
        "owner_id": 1
    },
    {
        "id": 0,
        "name": "Challenge 1.2: Baby's First Decision Coverage Challenge",
        "description": "This challenge is a bit more difficult than the first one... but you can take it, right?",
        "count": 2,
        "timer": 300,
        "hint": "There are two branches to cover. You must cover both!",
        "objective": "Decision coverage of line 5.",
        "board": "default",
        "code_file": 1,
        "passing_criteria": {
            "type": "decision",
            "preconditions": [
                "input.log[case_num].length > 0",
                "Math.abs(input.log[case_num][input.log[case_num].length - 1].from.x - input.log[case_num][input.log[case_num].length - 1].to.x) > 2"
            ],
            "tests": [
                "Math.abs(input.log[case_num][input.log[case_num].length - 1].from.y - input.log[case_num][input.log[case_num].length - 1].to.y) < 2",
                "Math.abs(input.log[case_num][input.log[case_num].length - 1].from.y - input.log[case_num][input.log[case_num].length - 1].to.y) > 2"
            ]
        },
        "owner_id": 1
    },
    {
        "id": 0,
        "name": "Challenge 2.1: Red vs. Blue, Round 1",
        "description": "In a game of Checkers, only one color can win. In this challenge, you'll explore a new way to interact with the board.",
        "count": 1,
        "timer": 200,
        "hint": "You can only cover the objective in one way. Also: don't get hung up on the function calls - they mean exactly what their name says!",
        "objective": "Statement coverage of line 5.",
        "board": "empty",
        "code_file": 2,
        "passing_criteria": {
            "type": "statement",
            "preconditions": [
                "utils.count_empty_spaces(input) != 64"
            ],
            "tests": [
                "Math.abs(utils.count_blue_pieces(input) - utils.count_red_pieces(input)) == 0 || Math.abs(utils.count_blue_pieces(input) - utils.count_red_pieces(input)) == 1"
            ]
        },
        "owner_id": 1
    }
]

